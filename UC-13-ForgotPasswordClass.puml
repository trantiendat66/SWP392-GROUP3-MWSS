@startuml
left to right direction
skinparam classAttributeIconSize 0
hide empty methods

package "model" {
  class PasswordResetToken <<entity>> {
    - token_id   : int
    - email      : String
    - otp_code   : String
    - expires_at : Timestamp
    - status     : String   ' NEW / USED / EXPIRED
    - retry_cnt  : int
    + getters/setters()
  }

  class Customer <<entity>> {
    - customer_id   : int
    - email         : String
    - password      : String
    + getters/setters()
  }
}

package "db" {
  class DBContext {
    - conn : Connection
    + getConnection() : Connection
  }
}

package "dao" {
  class CustomerDAO <<dao>> {
    + existsByEmail(email:String) : boolean
    + updatePasswordByEmail(email:String, newHash:String) : boolean
  }

  class PasswordResetDAO <<dao>> {
    + createOrReplace(email:String, otp:String, ttlMinutes:int) : boolean
    + findValid(email:String, otp:String) : PasswordResetToken
    + markUsed(token_id:int) : boolean
    + expireOld(email:String) : int
  }
}

package "service" {
  class EmailService {
    + sendResetOTP(email:String, otp:String) : boolean
  }

  class MD5PasswordHasher {
    + hashPassword(raw:String) : String
  }
}

package "controller" {
  class ForgotPasswordRequestServlet <<controller>> {
    - customerDAO      : CustomerDAO
    - passwordResetDAO : PasswordResetDAO
    - emailService     : EmailService
    + doPost(req:HttpServletRequest, resp:HttpServletResponse) : void
  }

  class ForgotPasswordResetServlet <<controller>> {
    - customerDAO      : CustomerDAO
    - passwordResetDAO : PasswordResetDAO
    - hasher           : MD5PasswordHasher
    + doPost(req:HttpServletRequest, resp:HttpServletResponse) : void
  }
}

CustomerDAO --|> DBContext
PasswordResetDAO --|> DBContext
ForgotPasswordRequestServlet ..> CustomerDAO
ForgotPasswordRequestServlet ..> PasswordResetDAO
ForgotPasswordRequestServlet ..> EmailService
ForgotPasswordResetServlet ..> CustomerDAO
ForgotPasswordResetServlet ..> PasswordResetDAO
ForgotPasswordResetServlet ..> MD5PasswordHasher
@enduml
